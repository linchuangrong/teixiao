var str="123abc";
//1 . 校验密码强度
//密码的强度必须是包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间。
var reg=new RegExp("^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$");
if(!reg.test(str)){
	console.log("验证失败");
}

//2. 校验中文
//字符串仅能是中文。
var reg=new RegExp("^[\\u4e00-\\u9fa5]{0,}$");

//3. 由数字、26个英文字母或下划线组成的字符串
var reg=new RegExp("^\\w+$");

//4. 校验E-Mail 地址
var reg=new RegExp("[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?");

//5. 校验身份证号码
var reg1=new RegExp("^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$");//15位
var reg2=new RegExp("^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9]|X)$");//18位

//6. 校验日期，“yyyy-mm-dd“ 格式的日期校验，已考虑平闰年
var reg1=new RegExp("^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$");

//
//	整数或者小数：^[0-9]+\.{0,1}[0-9]{0,2}$
//	只能输入数字："^[0-9]*$"。
//	只能输入n位的数字："^\d{n}$"。
//	只能输入至少n位的数字："^\d{n,}$"。
//	只能输入m~n位的数字：。"^\d{m,n}$"
//	只能输入零和非零开头的数字："^(0|[1-9][0-9]*)$"。
//	只能输入有两位小数的正实数："^[0-9]+(.[0-9]{2})?$"。
//	只能输入有1~3位小数的正实数："^[0-9]+(.[0-9]{1,3})?$"。
//	只能输入非零的正整数："^\+?[1-9][0-9]*$"。
//	只能输入非零的负整数："^\-[1-9][]0-9"*$。
//	只能输入长度为3的字符："^.{3}$"。
//	只能输入由26个英文字母组成的字符串："^[A-Za-z]+$"。
//	只能输入由26个大写英文字母组成的字符串："^[A-Z]+$"。
//	只能输入由26个小写英文字母组成的字符串："^[a-z]+$"。
//	只能输入由数字和26个英文字母组成的字符串："^[A-Za-z0-9]+$"。
//	只能输入由数字、26个英文字母或者下划线组成的字符串："^\w+$"。
//	验证用户密码："^[a-zA-Z]\w{5,17}$"正确格式为：以字母开头，长度在6~18之间，只能包含字符、数字和下划线。
//	验证是否含有^%&',;=?$\"等字符："[^%&',;=?$\x22]+"。
//	只能输入汉字："^[\u4e00-\u9fa5]{0,}$"
//	验证Email地址："^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$"。
//	验证InternetURL："^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$"。
//	验证电话号码："^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$"正确格式为："XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX"。
//	验证身份证号（15位或18位数字）："^\d{15}|\d{18}$"。
//	验证一年的12个月："^(0?[1-9]|1[0-2])$"正确格式为："01"～"09"和"1"～"12"。
//	验证一个月的31天："^((0?[1-9])|((1|2)[0-9])|30|31)$"正确格式为；"01"～"09"和"1"～"31"。 匹配中文字符的正则表达式： [\u4e00-\u9fa5]






